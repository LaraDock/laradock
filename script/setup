#!/bin/sh

# script/setup: Set up application for the first time after cloning, or set it
#               back to the initial first unused state.

ETC_HOSTS_FILE="/etc/hosts"

### test if user at docker group
if id -nG $(whoami) | grep -qw "docker"; then
    echo $USER belongs to $GROUP
else
    echo "$USER does not belong to docker group"
    sudo usermod -aG docker $(whoami)
fi

#test if git exist
if ! [ -x "$(command -v git)" ]; then
  echo '[-]      git is not installed.' >&2
  exit 0
fi



#test if docker  exist
if ! [ -x "$(command -v docker-compose)" ]; then
  echo '[-]      docker-compose is not installed.' >&2
  exit 0
fi


domains=("internal" "api" "campus-frontend")

set -e

cd "$(dirname "$0")/.."

echo "Do you want to use [h]ttps or [s]ll to clone the repositories? h/s [ENTER]:"
read protocol

while [ "$protocol" != "s" ] && [ "$protocol" != "h" ]
do
  echo "Please enter h or s to choose a git protocol"
  read protocol
done

echo "==> Cloning repositories"

function genCloneArg {
    if [ "$protocol" == "s" ];
    then
        echo "git@github.com:kiron/${1}.git"
    else
        echo "https://github.com/kiron/${1}.git"
    fi
}

repos="`cat script/.repos.lst`"
for repo in ${repos[@]}
do
    git clone $(genCloneArg $repo)
done

script/setenv

echo "==> Add Domains to ${ETC_HOSTS_FILE} and trust self signed certificates."
for domain in ${domains[@]}
do
    if grep -Fxq "127.0.0.1 ${domain}.app" $ETC_HOSTS_FILE
    then
        echo "${domain}.app hosts file OK"
    else
        echo "127.0.0.1 ${domain}.app" | sudo tee -a $ETC_HOSTS_FILE
        echo "Added ${domain}.app to hosts"
    fi
    if [[ "$OSTYPE" == "darwin"* ]]; then
        echo "Adding cert for $domain to keychain"
        sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain nginx/certs/$domain.crt
    fi
done

echo "==> Building images"
services="`cat script/.services.lst`"
docker-compose build --pull $services

script/bootstrap

echo "==> App is now ready to go!"
echo "==> Run script/server to start the dev env."
echo "==> Run script/update to update the dev env."
