#!/bin/sh

# Changed from environment to service compared to official GitHub script
# script/console: Launch a console for the application. Optionally allow an
#                 service to be passed in to let the script handle the
#                 specific requirements for connecting to a console for that
#                 service.

set -e

cd "$(dirname "$0")/.."

CLUSTER=${2:-local}

# Set kube context
if [ "$CLUSTER" = "uat" ]; then
    kubectl config use-context uat-cluster
elif [ "$CLUSTER" = "stg" ]; then
    kubectl config use-context staging-cluster
elif [ "$CLUSTER" = "prod" ]; then
    kubectl config use-context production-cluster
fi

if [ -n "$1" ]; then
    if [ "$CLUSTER" = "local" ]; then
        if [ "$1" = "workspace" ]; then
            docker-compose exec --user=laradock workspace bash
        elif [ "$1" = "php" ] || [ "$1" = "services" ]; then
            docker-compose exec php-fpm bash
        elif [ "$1" = "nginx" ]; then
            docker-compose exec nginx bash
        elif [ "$1" = "campus-frontend" ] || [ "$1" = "campus" ]; then
            docker-compose exec campus-frontend bash
        elif [ "$1" = "graphql" ] || [ "$1" = "kiron-graphql" ]; then
            docker-compose exec kiron-graphql sh
        elif [ "$1" = "postgres" ] || [ "$1" = "db" ] || [ "$1" = "database" ]; then
            docker-compose exec postgres sh
        else
            echo "Sorry, I don't know how to connect to the service '$1'."
            echo "Try to enter workspace, services, nginx, campus, graphql or porstgres";
            exit 1
        fi
    else
        if [ "$1" = "services" ] || [ "$1" = "discourse" ] || [ "$1" = "metabase" ] || [ "$1" = "limesurvey" ] ; then
            kubectl exec -ti $(kubectl get pods --selector=app=${1} -o=name | sed -n 1p | sed 's/pods\///') bash
        elif [ "$1" = "apollo-engine" ]; then
            echo "no shell access"
        elif [ "$1" = "campus-frontend" ] || [ "$1" = "campus" ]; then
            kubectl exec -ti $(kubectl get pods --selector=app=campus-frontend -o=name | sed -n 1p | sed 's/pods\///') sh
        elif [ "$1" = "graphql" ] || [ "$1" = "kiron-graphql" ]; then
            kubectl exec -ti $(kubectl get pods --selector=app=kiron-graphql -o=name | sed -n 1p | sed 's/pods\///') sh
        else
            echo "Sorry, I don't know how to connect to the service '$1'."
            echo "Try to enter services, campus, graphql, discourse, metabase or limesurvey";
            exit 1
        fi
    fi
else
    docker-compose exec --user=laradock workspace bash
fi
